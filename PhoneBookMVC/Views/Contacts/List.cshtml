@model PhoneBookMVC.ViewModels.ContactsVM.ContactsListVM
@using PagedList.Mvc

@{
    ViewBag.Title = "List Contacts";
}

<h3>@ViewBag.Title</h3>
<h4>@PhoneBookMVC.Services.AuthenticationService.LoggedUser.FirstName @PhoneBookMVC.Services.AuthenticationService.LoggedUser.LastName</h4>

<p>
    @Html.ActionLink("Create New", "Edit")
</p>

@using (Html.BeginForm("List", "Contacts", FormMethod.Get))
{
    <div>
        <h5>Find by name:</h5> 
        <p>
            @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-default" id="search-submit" />
        </p>
    </div>
}

@if (Model.Contacts.Count == 0)
{
    <div class="alert alert-info">No Contacts Found</div>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("First Name", "List", "Contacts", new RouteValueDictionary { { "Search", Model.Search }, { "SortOrder", Model.SortOrder == "fname_asc" ? "fname_desc" : "fname_asc" } }, null)
            </th>
            <th>
                @Html.ActionLink("Last Name", "List", "Contacts", new RouteValueDictionary { { "Search", Model.Search }, { "SortOrder", Model.SortOrder == "lname_asc" ? "lname_desc" : "lname_asc" } }, null)
            </th>
            <th>Address</th>
            <th></th>
        </tr>

        @foreach (var item in Model.Contacts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID }) |
                    @Html.ActionLink("Show Phones", "List", "Phones", new { ContactID = item.ID }, null)
                </td>
            </tr>
        }

    </table>
    <br />

    <div >
         @Html.PagedListPager(Model.Contacts, page => Url.Action("List", new RouteValueDictionary { { "Page", page }, { "Search", Model.Search }, { "PageSize", Model.PageSize } }))
         Page @(Model.Contacts.PageCount < Model.Contacts.PageNumber ? 0 : Model.Contacts.PageNumber) of @Model.Contacts.PageCount
    </div>
}

@using (@Html.BeginForm("List", "Contacts", new RouteValueDictionary { { "Search", Model.Search }, { "SortOrder", Model.SortOrder }, { "PageSize", Model.PageSize } }, FormMethod.Get, new { @id = "pageSizeForm" }))
{
        <div>
            <p id="for-page-size">Items on page: </p>
            @Html.DropDownListFor(model => model.PageSize, new SelectList(new List<SelectListItem> {
                 new SelectListItem { Text = "2", Value = "2"},
                 new SelectListItem { Text = "5", Value = "5"},
                 new SelectListItem { Text = "10", Value = "10"}
             }, "Value", "Text"), new { @class = "form-control" })          
        </div>
 }

@section scripts{
    <script>
        $(document).ready(function () {
            $('#PageSize').change(function () {
                $('#pageSizeForm').submit();
            });
        });
    </script>
}