@model PhoneBookMVC.ViewModels.ContactsVM.ContactsListVM

@{
    ViewBag.Title = "List Contacts";
}

<h3>@ViewBag.Title</h3>
<h4>@PhoneBookMVC.Services.AuthenticationManager.LoggedUser.FirstName @PhoneBookMVC.Services.AuthenticationManager.LoggedUser.LastName</h4>

<p>
    @(Html.ActionLink<ContactsController>("Create New", c => c.Edit()))
</p>

@using (Html.BeginForm<ContactsController>(c => c.List(), FormMethod.Get))
{
    <div>
        <h5>Find by name:</h5>
        <p>
            @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-default" id="search-submit" />
        </p>
    </div>
}

@if (Model.Contacts.Count == 0)
{
    <div class="alert alert-info">No Contacts Found</div>
}
else
{
    <table class="table">
        <tr>
            <th>
                @(Html.ActionLink<ContactsController>("First Name", c => c.List(), new { Search = Model.Search, SortOrder = Model.SortOrder == "fname_asc" ? "fname_desc" : "fname_asc" }, null))
            </th>
            <th>
                @(Html.ActionLink<ContactsController>("Last Name", c => c.List(), new { Search = Model.Search, SortOrder = Model.SortOrder == "lname_asc" ? "lname_desc" : "lname_asc" }, null))
            </th>
            <th>Address</th>
            <th></th>
        </tr>

        @foreach (var item in Model.Contacts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City.Country.Name),
                    @Html.DisplayFor(modelItem => item.City.Name),
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @(Html.ActionLink<ContactsController>("Edit", c => c.Edit(), new { id = item.ID })) |
                    <a href="#" data-toggle="modal" data-target="#modal-delete-confirmation" data-url="/Contacts/Delete/@item.ID" data-additionalinfo="@item.FirstName @item.LastName">Delete</a> |
                    @(Html.ActionLink<PhonesController>("Show Phones", c => c.List(), new { ContactID = item.ID }, null))
                </td>
            </tr>
        }

    </table>
    <br />

    <div>
        @Html.PagedListPager(Model.Contacts, page => (@Url.Action<ContactsController>(c => c.List(), new { Page = page, Search = Model.Search, PageSize = Model.PageSize })))
        Page @(Model.Contacts.PageCount < Model.Contacts.PageNumber ? 0 : Model.Contacts.PageNumber) of @Model.Contacts.PageCount
    </div>

    using (Html.BeginForm<ContactsController>(c => c.List(), FormMethod.Get, new { Search = Model.Search, SortOrder = Model.SortOrder, PageSize = Model.PageSize }, new { @id = "pageSizeForm" }))
    {
        <div>
            <p id="for-page-size">Items on page: </p>
            @Html.DropDownListFor(model => model.PageSize, new SelectList(new List<SelectListItem> {
                new SelectListItem { Text = "3", Value = "3"},
                new SelectListItem { Text = "5", Value = "5"},
                new SelectListItem { Text = "10", Value = "10"}
            }, "Value", "Text"), new { @class = "form-control" })
        </div>
    }
}

@section FooterSection {
    @Html.Partial("~/Views/Shared/PartialViews/_DeleteConfirmation.cshtml")
}

@section scripts{
    <script>
        $(document).ready(function () {
            $('#PageSize').change(function () {
                $('#pageSizeForm').submit();
            });
        });
    </script>
}