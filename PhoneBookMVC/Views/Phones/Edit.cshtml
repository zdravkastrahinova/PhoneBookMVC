@model PhoneBookMVC.ViewModels.PhonesVM.PhonesEditVM

@{
    ViewBag.Title = Model.ID == 0 ? "Create New Phone" : "Edit Phone";
}

<h3>@ViewBag.Title</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ContactID)

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PhoneType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @(Html.ActionLink<PhonesController>("Back to List", c => c.List(), new { ContactID = Model.ContactID }))
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
