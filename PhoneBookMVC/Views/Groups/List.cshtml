@model PhoneBookMVC.ViewModels.GroupsVM.GroupsListVM

@{
    ViewBag.Title = "List Groups";
}

<h3>@ViewBag.Title</h3>

<p>
    @(Html.ActionLink<GroupsController>("Create New", c => c.Edit()))
</p>

@using ((Html.BeginForm<GroupsController>(c => c.List(), FormMethod.Get)))
{
    <div>
        <h5>Find by name:</h5>
        <p>
            @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-default" id="search-submit" />
        </p>
    </div>
}

@if (Model.Groups.Count == 0)
{
    <div class="alert alert-info">No Groups Found</div>
}
else
{
    <table class="table">
        <tr>
            <th>
                @(Html.ActionLink<GroupsController>("Group Name", c => c.List(), new { Search = Model.Search, SortOrder = Model.SortOrder == "name_asc" ? "name_desc" : "name_asc" }, null))
            </th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var group in Model.Groups)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => group.Key.Name)
                </td>
                <td>
                    @(Html.ActionLink<GroupsController>("Edit", c => c.Edit(), new { id = group.Key.ID })) |
                    <a href="#" data-toggle="modal" data-target="#modal-delete-confirmation" data-url="/Groups/Delete/@group.Key.ID" data-additionalInfo="@group.Key.Name">Delete</a> |
                    <a class="showContacts" href="#">Show Contacts</a>
                </td>

                <td style="display:none">
                    <table class="table" id="contactsTable">
                        <thead>
                            <tr>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>
                                    <select class="selectContacts" name="character" multiple="multiple" data-groupID="@group.Key.ID">
                                        @foreach (var contact in group.Value)
                                        {
                                            <option value="@contact.Value" @Html.Raw(contact.Selected ? "selected" : String.Empty) class="updateGroups" data-contactID="@contact.Value">@contact.Text</option>
                                        }
                                    </select>
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var contact in group.Key.Contacts)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => contact.FirstName) </td>
                                    <td>@Html.DisplayFor(modelItem => contact.LastName)</td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </td>
            </tr>
        }

    </table>
    <br />
}

@section FooterSection{
    @Html.Partial("~/Views/Shared/PartialViews/_DeleteConfirmation.cshtml")
}

@section scripts{
    <script>
        $(document).ready(function () {
            $(function () {
                $('.selectContacts').searchableOptionList();
            });

            $('.showContacts').click(function () {
                $(this).parent().next().fadeToggle();

                if ($(this).text() == "Show Contacts") {
                    $(this).text("Hide Contacts");
                } else {
                    $(this).text("Show Contacts");
                }
            });

            $('.selectContacts').change(function () {
                var selectedContacts = $(this).val();
                var groupID = $(this).attr('data-groupID');
                var tbody = $(this).parent().parent().parent().next();

                $.ajax({
                    type: "Post",
                    url: '@Url.Action("Add", "Groups")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ contactIDs: selectedContacts, groupID: groupID }),
                    dataType: "json",
                    success: function (contacts) {
                        tbody.empty();
                        var input = "";
                        $.each(contacts, function (key, value) {
                            input += "<tr>";
                            input += "<td>" + value.firstName + "</td>";
                            input += "<td>" + value.lastName + "</td>";
                            input += "</tr>";
                        });

                        tbody.append(input);
                        removeFromGroupEventListener();
                    },
                    error: function () { alert('error'); }
                });
            });

            function removeFromGroupEventListener() {
                $('.removeContact').click(function () {
                    var removedContact = $(this).parent().parent();
                    var contactID = $(this).attr('data-contactID');
                    var groupID = $(this).attr('data-groupID')
                    var thead = $(this).parent().parent().parent().prev();

                    $.ajax({
                        type: "Post",
                        url: '@Url.Action("Remove", "Groups")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ contactID: contactID, groupID: groupID }),
                        dataType: "json",
                        success: function () {
                            removedContact.remove();
                            $(thead).find('.sol-checkbox[value=' + contactID + ']').prop("checked", false);
                        },
                        error: function () { alert('error'); }
                    });
                });
            }
        });
    </script>
}
