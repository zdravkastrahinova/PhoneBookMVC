@model PhoneBookMVC.ViewModels.GroupsVM.GroupsListVM

@{
    ViewBag.Title = "List Groups";
}

<h3>@ViewBag.Title</h3>

<p>
    @Html.ActionLink("Create New", "Edit")
</p>

@using ((Html.BeginForm<GroupsController>(c => c.List(), FormMethod.Get)))
{
    <div>
        <h5>Find by name:</h5>
        <p>
            @Html.TextBoxFor(model => model.Search, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-default" id="search-submit" />
        </p>
    </div>
}

@if (Model.Groups.Count == 0)
{
    <div class="alert alert-info">No Groups Found</div>
}
else
{
    <table class="table">
        <tr>
            <th>
                @(Html.ActionLink<GroupsController>("Group Name", c => c.List(), new { Search = Model.Search, SortOrder = Model.SortOrder == "name_asc" ? "name_desc" : "name_asc" }, null))
            </th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var item in Model.Groups)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @(Html.ActionLink<GroupsController>("Edit", c => c.Edit(), new { id = item.ID })) |
                    <a class="showContacts" href="#">Show Contacts</a> |
                    @(Html.ActionLink<GroupsController>("Delete", c => c.Delete(item.ID)))
                </td>

                <td style="display:none">
                    @if (item.Contacts.Count == 0)
                    {
                        <div class="alert alert-info">No contacts in the group</div>
                    }
                    else
                    {
                        <table class="table">
                            <tr>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th></th>
                            </tr>

                            @foreach (var contact in @item.Contacts)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => contact.FirstName) </td>
                                    <td>@Html.DisplayFor(modelItem => contact.LastName)</td>
                                    <td><a href="#" data-contactID="@contact.ID" data-groupID="@item.ID" class="removeContact">Remove</a></td>
                                </tr>
                            }

                        </table>
                    }
                </td>
            </tr>
        }

    </table>
    <br />

    <div>
        @Html.PagedListPager(Model.Groups, page => (@Url.Action<GroupsController>(c => c.List(), new { Page = page, Search = Model.Search, PageSize = Model.PageSize })))
        Page @(Model.Groups.PageCount < Model.Groups.PageNumber ? 0 : Model.Groups.PageNumber) of @Model.Groups.PageCount
    </div>
}

@using (Html.BeginForm<GroupsController>(c => c.List(), FormMethod.Get, new { Search = Model.Search, SortOrder = Model.SortOrder, PageSize = Model.PageSize }, new { @id = "pageSizeForm" }))
{
    <div>
        <p id="for-page-size">Items on page: </p>
        @Html.DropDownListFor(model => model.PageSize, new SelectList(new List<SelectListItem> {
                 new SelectListItem { Text = "3", Value = "3"},
                 new SelectListItem { Text = "5", Value = "5"},
                 new SelectListItem { Text = "10", Value = "10"}
             }, "Value", "Text"), new { @class = "form-control" })
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            $('#PageSize').change(function () {
                $('#pageSizeForm').submit();
            });

            $('.showContacts').click(function () {
                $(this).parent().next().fadeToggle();
            });

            $('.removeContact').click(function () {
                var removedContact = $(this).parent().parent();
                $.ajax({
                    type: "Post",
                    url: '@Url.Action("Remove", "Groups")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ contactID: $(this).attr('data-contactID'), groupID: $(this).attr('data-groupID') }),
                    dataType: "json",
                    success: function () { removedContact.remove(); },
                    error: function () { alert('error'); }
                });
            });
        });
    </script>
}
